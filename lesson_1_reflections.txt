1. The diff helped me only look at lines which are not same, hence isolating the error. This is pretty useful and prevent unnecessary reading of the code.
2. It saves us time. No need to take backups manually, comes in handy if we need to access older versions of the code etc.
3. Committing manually is useful as there is a logical checkpoint to save progress, unlike auto commit. At the same time, lack of coder discipline to commit at the right interval creates too many or too little copies of the document.

4. Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
   When a coder makes changes, it is made throughout multiple files and commit is used once a functionality, to update codes in all files.

5. How can you use the commands git log and git diff to view the history of files?
   Git log tell brief data about all commits so far. Git diff can be used to compare two commits with respect to additions and deletions of code etc.

6. How might using version control make you more confident to make changes that could break something?
   Version control will greatly improve the experience, as can have access to previous versions.
7. Now that you have your workspace set up, what do you want to try using Git for?
   I want to use it do rand shit.

